# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "macos-13", "windows-latest"]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13-dev"]
        exclude:
        - os: "macos-latest"
          python-version: "3.7"

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies (Linux, Python 3.13, scipy)
      if: "startsWith(matrix.python-version, '3.13') && startsWith(matrix.os, 'ubuntu')"
      run: |
            sudo apt-get install libopenblas-dev
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        python -m pip install pathlib
        python -m pip install sh
        python -m pip install matplotlib
        python -m pip install ANIAnimator
        python -m pip install scipy
        python -m pip install numpy
        python -m pip install mock
    - name: Install dependencies (Linux)
      if: "startsWith(matrix.os, 'ubuntu')"
      run: |
        sudo apt-get install python3-opengl
    - name: Install dependencies (macOS)
      if: "startsWith(matrix.os, 'macos')"
      run: |
        mkdir ~/.config/matplotlib/
        echo "backend: Agg" > ~/.config/matplotlib/matplotlibrc
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Generate Report
      run: |
        pip install codecov
        pip install pytest-cov
        pytest --cov=./ --cov-report=xml
        codecov
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5.4.2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        files: /home/runner/work/SIESTAstepper/SIESTAstepper/coverage.xml
        flags: tests
    - name: Upload testing report to Codacy
      uses: codacy/codacy-coverage-reporter-action@v1
      with:
        project-token: ${{ secrets.codacy_token }}
        coverage-reports: /home/runner/work/SIESTAstepper/SIESTAstepper/coverage.xml
    - name: See coverage
      run: |
          cd /home/runner/work/SIESTAstepper/SIESTAstepper/
          ls
